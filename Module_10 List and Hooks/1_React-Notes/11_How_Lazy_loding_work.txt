/*
In simple terms, lazy loading is a design pattern. It allows you to load parts of your 
application on-demand to reduce the initial load time. For example, you can initially load 
the components and modules related to user login and registration. Then, you can load the 
rest of the components based on user navigation.

You might not feel much difference when using lazy loading for small-scale applications. 
But it significantly impacts large-scale applications by reducing the initial load time.
 Ultimately, it improves both the user experience and the applicationâ€™s performance.

Advantages of Lazy Loading

Reduces initial loading time by reducing the bundle size.
Reduces browser workload.
Improves application performance in low bandwidth situations.
Improves user experience at initial loading.
Optimizes resource usage.

Disadvantages of Lazy Loading

Not suitable for small-scale applications.
Placeholders can slow down quick scrolling.
Requires additional communication with the server to fetch resources.
Can affect SEO and ranking

npm i axios :- install frist then loading data from api
*/

==> first components
import React from 'react'
import { useEffect } from 'react'

function Hello() {
    useEffect(()=>{

    },[])
  return (
    <div>
      <h1>Hello...</h1>
    </div>
  )
}

export default Hello;

===> secound componets.
import axios from 'axios'
import React, { useEffect,useState } from 'react'


function Morning() {

    useEffect(() => {
        fetch();
    }, []);

    const [data, setData] = useState([]);

    const fetch = async () => {
        const res = await axios.get(`https://jsonplaceholder.typicode.com/photos`);
        //console.log(res.data);
        setData(res.data)
    }

    return (
        <div className="row">
            <div className="col-md-12">
                {/*   Kitchen Sink */}
                <div className="panel panel-default">
                    <div className="panel-body">

                        <div className="row">
                            {

                                data.map((value, index) => {
                                    console.log(value.url)
                                    return (
                                        
                                        <div value={index} className="col-md-3">
                                            <div className="card" style={{ width: '100%' }}>
                                                <img src={value.url} alt="Card image" style={{ width: '100%' }} />
                                                <div className="card-body">
                                                    <p className="card-text">{value.title}</p>
                                                    {/* <a href="#" className="btn btn-primary">See Profile</a> */}
                                                </div>
                                            </div>
                                        </div>
                                    )
                                })

                            }

                        </div>
                    </div>
                </div>
                {/* End  Kitchen Sink */}
            </div>
        </div>
    )
}

export default Morning;


==> third componets to use main lazy_loding work.
	-> with hello.jsx and then moring.jsx api call
--> this is use for lazy use and suspense use for fallback for loding path call

import React, { Suspense, lazy } from 'react'
import Header from '../Layout/Comomon_componet/Header';
// withaout lazy loading import
import Hello from './Hello'

const Moring = lazy(()=> import("./Moring"));

function Main_loading() {

  return (
    <div>
      <Header/>
      <div className='container mt-5'>
        <h1>Hi i am Main Component</h1>
        <hr />
        <Hello/>
        <Suspense fallback={<div>Loding...</div>}>
           <Moring/>
        </Suspense>
    </div>
    </div>
  )
}

export default Main_loading;



